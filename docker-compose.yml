services:
  notification-service:
    build: ./backend/notifications
    container_name: notification_service
    depends_on:
      - kafka
      - init-kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka-broker:9092
      - KAFKA_CONSUMER_GROUP_ID=notification-service-group
    ports:
      - "8001:8001"
    networks:
      - product_network
  search-service:
    build: ./backend/search/SearchService
    container_name: search_service
    depends_on:
      - kafka
      - elasticsearch
      - init-kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka-broker:9092
      - ELASTICSEARCH_URI=http://elasticsearch:9200
      - ASPNETCORE_URLS=http://+:8082
    ports:
      - "8082:8082"
    networks:
      - product_network
  product-command-service:
    build:
      context: ./backend/products/productservice
      args:
        MAVEN_BUILD_ARGS: "-Pdocker"
    container_name: product_command_service
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/productdb
      SPRING_R2DBC_USERNAME: user
      SPRING_R2DBC_PASSWORD: pass
    ports:
      - "8080:8080"
    volumes:
      - ./scripts/wait-for-it.sh:/app/scripts/wait-for-it.sh:ro
      - C:/Users/ander/scoop/apps/maven/current/conf/settings.xml:/root/.m2/settings.xml:ro
    networks:
      - product_network
      - nexus_shared_net
  product-query-service:
    build: ./backend/products/proudcts-query
    container_name: product_query_service
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka-broker:9092
      - KAFKA_CONSUMER_GROUP_ID=product-query-group
    depends_on:
      - kafka
      - mongo
    ports:
      - "8081:8081"
    networks:
      - product_network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - product_network
  postgres:
    image: postgres
    container_name: product_db
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    networks:
      - product_network
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - product_network

  microfrontend-home:
    build:
      context: ./microfrontends/home
      dockerfile: Dockerfile
    container_name: mfe_home
    ports:
      - "5173:5173"
    networks:
      - product_network

  microfrontend-products:
    build:
      context: ./microfrontends/products
      dockerfile: Dockerfile
    container_name: mfe_products
    ports:
      - "5174:5174"
    networks:
      - product_network
  kafka:
    image: apache/kafka:latest
    container_name: kafka-broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - 9092:9092
    networks:
      - product_network

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic product-created-event --replication-factor 1 --partitions 3
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic product-deleted --replication-factor 1 --partitions 3
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic price-drop-events --replication-factor 1 --partitions 3

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    networks:
      - product_network

networks:
  product_network:
    driver: bridge
  nexus_shared_net:
    external: true
