services:
  product-service:
    build: ./backend/products/productservice
    container_name: product_service
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/productdb
      SPRING_R2DBC_USERNAME: user
      SPRING_R2DBC_PASSWORD: pass
    ports:
      - "8080:8080"
    volumes:
      - ./scripts/wait-for-it.sh:/app/scripts/wait-for-it.sh:ro
    networks:
      - product_network

  postgres:
    image: postgres
    container_name: product_db
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    networks:
      - product_network

  microfrontend-home:
    build:
      context: ./microfrontends/home
      dockerfile: Dockerfile
    container_name: mfe_home
    ports:
      - "5173:5173"
    networks:
      - product_network

  microfrontend-products:
    build:
      context: ./microfrontends/products
      dockerfile: Dockerfile
    container_name: mfe_products
    ports:
      - "5174:5174"
    networks:
      - product_network
  kafka:
    image: apache/kafka:latest
    container_name: kafka-broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - 9092:9092
    networks:
      - product_network

networks:
  product_network:
    driver: bridge
